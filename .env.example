# =============================================================================
# Query Generation Agent - Environment Variables Example
# =============================================================================
# Copy this file to .env and fill in your actual values
# NEVER commit the .env file to git - it contains sensitive information!
# =============================================================================

# -----------------------------------------------------------------------------
# Google Cloud Configuration
# -----------------------------------------------------------------------------

# Your Google Cloud Project ID for BigQuery queries
GCP_PROJECT_ID=your-project-id-here

# Project to execute BigQuery queries in (can be same as GCP_PROJECT_ID)
BQ_EXECUTION_PROJECT=your-project-id-here

# BigQuery location/region (e.g., "US", "EU", "us-central1")
BQ_LOCATION=US

# -----------------------------------------------------------------------------
# API Keys
# -----------------------------------------------------------------------------

# Gemini API Key for AI/ML query generation and validation
GEMINI_API_KEY=your-gemini-api-key-here

# -----------------------------------------------------------------------------
# Query Generation Configuration
# -----------------------------------------------------------------------------

# Maximum number of refinement iterations per query (default: 5, higher = more attempts but slower)
MAX_QUERY_ITERATIONS=5

# Maximum number of queries to generate per insight
MAX_QUERIES_PER_INSIGHT=5

# Query execution timeout in seconds (allow longer for complex queries)
QUERY_TIMEOUT_SECONDS=120

# Gemini model to use for generation (gemini-2.5-pro-latest for best quality)
GEMINI_MODEL=gemini-2.5-pro-latest

# Minimum alignment score threshold for accepting queries (0-1, higher = stricter)
ALIGNMENT_THRESHOLD=0.85

# Query naming strategy for generated queries
# - rule_based: Fast pattern-based extraction from descriptions (default, no LLM calls)
# - llm: Use LLM to generate descriptive names (slower, more accurate)
# - hybrid: Try LLM first, fallback to rule_based if LLM fails
QUERY_NAMING_STRATEGY=rule_based

# -----------------------------------------------------------------------------
# MCP Service Configuration
# -----------------------------------------------------------------------------

# MCP server name
MCP_SERVER_NAME=query-generation-agent

# MCP server version
MCP_SERVER_VERSION=1.0.0

# MCP transport mode (stdio or http)
# - stdio: For local development and subprocess communication (default)
# - http: For containerized deployment and remote connections
MCP_TRANSPORT=stdio

# Host address for HTTP server (only used when MCP_TRANSPORT=http)
# Use 0.0.0.0 in containers to accept connections from any interface
MCP_HOST=0.0.0.0

# Port for MCP HTTP service (only used when MCP_TRANSPORT=http)
MCP_PORT=8081

# -----------------------------------------------------------------------------
# Optional Configuration
# -----------------------------------------------------------------------------

# Logging level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Enable detailed validation logging
ENABLE_VALIDATION_LOGGING=true

# Maximum number of sample rows to return from validation queries
MAX_SAMPLE_ROWS=10
